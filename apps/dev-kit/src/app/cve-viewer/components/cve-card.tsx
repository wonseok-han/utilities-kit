import Link from 'next/link';

import { SeverityBadge } from './severity-badge';

export function CVECard({ cve }: { cve: CVEDataType }) {
  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ko-KR', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  return (
    <div className="bg-gray-800 border border-gray-700 rounded-lg p-4 hover:border-gray-600 transition-colors h-full flex flex-col">
      {/* 헤더: CVE ID와 심각도 */}
      <div className="flex items-start justify-between mb-3">
        <Link
          className="text-lg font-semibold text-blue-400 hover:text-blue-300 cursor-pointer truncate flex-1 mr-2 transition-colors"
          href={`https://nvd.nist.gov/vuln/detail/${cve.id}`}
          rel="noopener noreferrer"
          target="_blank"
        >
          {cve.id}
        </Link>
        <SeverityBadge severity={cve.severity} />
      </div>

      {/* 설명 */}
      <p className="text-gray-300 text-sm mb-4 line-clamp-3 flex-shrink-0">
        {cve.description}
      </p>

      {/* 메타 정보: 발행일과 CVSS 점수 */}
      <div className="flex items-center justify-between text-xs text-gray-400 mb-4 flex-shrink-0">
        <span className="truncate">
          발행일: {formatDate(cve.publishedDate)}
        </span>
        {cve.cvssScore && (
          <span className="bg-gray-700 px-2 py-1 rounded ml-2 flex-shrink-0">
            CVSS: {cve.cvssScore.toFixed(1)}
          </span>
        )}
      </div>

      {/* 영향받는 제품 */}
      {cve.affectedProducts.length > 0 && (
        <div className="mb-4 flex-shrink-0">
          <h4 className="text-sm font-semibold text-gray-300 mb-2">
            영향받는 제품:
          </h4>
          <div className="flex flex-wrap gap-1">
            {Array.from(new Set(cve?.affectedProducts || []))
              .slice(0, 3)
              .map((product) => (
                <span
                  key={`${cve.id}-product-${product}`}
                  className="bg-gray-700 text-gray-300 px-2 py-1 rounded text-xs truncate max-w-full"
                  title={product}
                >
                  {product}
                </span>
              ))}
            {Array.from(new Set(cve.affectedProducts)).length > 3 && (
              <span className="bg-gray-700 text-gray-300 px-2 py-1 rounded text-xs">
                +{Array.from(new Set(cve.affectedProducts)).length - 3} more
              </span>
            )}
          </div>
        </div>
      )}

      {/* 참고 링크 */}
      {cve.references.length > 0 && (
        <div className="mt-auto">
          <h4 className="text-sm font-semibold text-gray-300 mb-2">
            참고 링크:
          </h4>
          <div className="flex flex-wrap gap-2">
            {cve.references.slice(0, 2).map((ref) => (
              <Link
                key={`${cve.id}-ref-${ref}-${ref.length}`}
                className="text-blue-400 hover:text-blue-300 text-xs underline"
                href={ref}
                rel="noopener noreferrer"
                target="_blank"
              >
                링크 {cve.references.indexOf(ref) + 1}
              </Link>
            ))}
            {cve.references.length > 2 && (
              <span className="text-gray-400 text-xs">
                +{cve.references.length - 2} more
              </span>
            )}
          </div>
        </div>
      )}
    </div>
  );
}
